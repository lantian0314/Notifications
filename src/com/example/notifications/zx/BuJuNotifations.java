package com.example.notifications.zx;


import com.example.notifications.R;
import com.example.notifications.tools.BaseTools;


import android.app.Activity;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.os.Environment;
import android.support.v4.app.NotificationCompat;
import android.widget.RemoteViews;

public class BuJuNotifations extends Activity {
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		//获取状态通知栏的管理
		NotificationManager mNotificationManager=(NotificationManager) getSystemService(NOTIFICATION_SERVICE);
		//实例化通知栏管理器
		NotificationCompat.Builder mBuilder=new NotificationCompat.Builder(this);
		//先设定RemoteViews
		RemoteViews view_custom = new RemoteViews(getPackageName(), R.layout.view_custom);
		//设置对应IMAGEVIEW的ID的资源图片
		//view_custom.setImageViewResource(R.id.custom_icon, R.drawable.icon);
		String path=Environment.getExternalStorageDirectory().toString()+"/"+"123.png";    
		Bitmap bitmap=BaseTools.convertToBitmap(path,40,40);
		view_custom.setImageViewBitmap(R.id.custom_icon, bitmap);
		view_custom.setTextViewText(R.id.tv_custom_title, "测试标题");
		view_custom.setTextViewText(R.id.tv_custom_content, "测试内容");
		//mBuilder.setContentTitle("测试标题");
		//mBuilder.setContentText("测试内容");
		mBuilder.setContentIntent(getDefalutIntent(Notification.FLAG_AUTO_CANCEL)); //设置通知栏点击意图  
	//  .setNumber(number) //设置通知集合的数量  
	    mBuilder.setTicker("测试通知来啦"); //通知首次出现在通知栏，带上升动画效果的  
	   mBuilder .setWhen(System.currentTimeMillis());//通知产生的时间，会在通知信息里显示，一般是系统获取到的时间  
	    mBuilder.setPriority(Notification.PRIORITY_DEFAULT); //设置该通知优先级  
	//  .setAutoCancel(true)//设置这个标志当用户单击面板就可以让通知将自动取消    
	    mBuilder.setOngoing(false);//ture，设置他为一个正在进行的通知。他们通常是用来表示一个后台任务,用户积极参与(如播放音乐)或以某种方式正在等待,因此占用设备(如一个文件下载,同步操作,主动网络连接)  
	   mBuilder .setDefaults(Notification.DEFAULT_VIBRATE);//向通知添加声音、闪灯和振动效果的最简单、最一致的方式是使用当前的用户默认设置，使用defaults属性，可以组合  
	    //Notification.DEFAULT_ALL  Notification.DEFAULT_SOUND 添加声音 // requires VIBRATE permission  
	    mBuilder.setSmallIcon(R.drawable.ic_launcher);//设置通知小ICON  
	    Notification notify = mBuilder.build();
		notify.contentView = view_custom;
	    mNotificationManager.notify(1, notify);
	}

	public PendingIntent getDefalutIntent(int flags){  
	    PendingIntent pendingIntent= PendingIntent.getActivity(this, 1, new Intent(), flags);  
	    return pendingIntent;  
	}  

}
